name: CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Environment
      run: |
        # Instalación de dependencias necesarias
        sudo apt-get update
        sudo apt-get install -y ruby-full gcc g++ dotnet-sdk-8.0
        gem install bundler # Instalar bundler para Ruby si es necesario

    - name: Run tests and check scripts
      run: |
        mkdir -p logs
        error_found=false

        # Ejecutar scripts de Python
        for file in $(find . -name "*.py"); do
          echo "Running $file"
          python $file &> logs/$(basename $file).log || {
            echo "$file failed. Check logs/$(basename $file).log for details."
            error_found=true
          }
        done

        # Ejecutar scripts de Ruby
        for file in $(find . -name "*.rb"); do
          echo "Running $file"
          ruby $file &> logs/$(basename $file).log || {
            echo "$file failed. Check logs/$(basename $file).log for details."
            error_found=true
          }
        done

        # Ejecutar scripts de C
        for file in $(find . -name "*.c"); do
          echo "Compiling $file"
          gcc $file -o build/$(basename $file .c) &> logs/$(basename $file).compile.log || {
            echo "$file compile failed. Check logs/$(basename $file).compile.log for details."
            error_found=true
          }
          echo "Running build/$(basename $file .c)"
          ./build/$(basename $file .c) &> logs/$(basename $file).run.log || {
            echo "Execution of build/$(basename $file .c) failed. Check logs/$(basename $file).run.log for details."
            error_found=true
          }
        done

        # Ejecutar scripts de C++
        for file in $(find . -name "*.cpp"); do
          echo "Compiling $file"
          g++ $file -o build/$(basename $file .cpp) &> logs/$(basename $file).compile.log || {
            echo "$file compile failed. Check logs/$(basename $file).compile.log for details."
            error_found=true
          }
          echo "Running build/$(basename $file .cpp)"
          ./build/$(basename $file .cpp) &> logs/$(basename $file).run.log || {
            echo "Execution of build/$(basename $file .cpp) failed. Check logs/$(basename $file).run.log for details."
            error_found=true
          }
        done

        # Ejecutar scripts de C#
        for file in $(find . -name "*.cs"); do
          echo "Compiling $file"
          dotnet build $file &> logs/$(basename $file).compile.log || {
            echo "$file compile failed. Check logs/$(basename $file).compile.log for details."
            error_found=true
          }
          echo "Running $file"
          dotnet run --project $file &> logs/$(basename $file).run.log || {
            echo "Execution of $file failed. Check logs/$(basename $file).run.log for details."
            error_found=true
          }
        done

        # Ejecutar scripts de Lua
        for file in $(find . -name "*.lua"); do
          echo "Running $file"
          lua $file &> logs/$(basename $file).log || {
            echo "$file failed. Check logs/$(basename $file).log for details."
            error_found=true
          }
        done

        # Salir con código de error si se encontró algún error
        if [ "$error_found" = true ]; then
          exit 1
        fi

    - name: Archive logs
      run: tar -czf logs.tar.gz logs

    - name: Send email on failure
      if: ${{ failure() }} # Este paso solo se ejecutará si alguno de los pasos anteriores falló
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.GMAIL_USERNAME }}
        password: ${{ secrets.GMAIL_PASSWORD }}
        from: ${{ secrets.GMAIL_USERNAME }}
        to: davikenat@gmail.com
        subject: Error en el repositorio - Logs adjuntos
        body: |
          Error encontrado en el repositorio.
          Detalles del error:
          - Repositorio: ${{ github.repository }}
          - Rama: ${{ github.ref }}
          - Workflow: ${{ github.workflow }}
          - Run ID: ${{ github.run_id }}
          - Se adjuntan los logs para más detalles.
        attachments: logs.tar.gz
