name: CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Environment
      run: |
        # Instalación de dependencias necesarias
        sudo apt-get update
        sudo apt-get install -y ruby-full gcc g++ dotnet-sdk-8.0
        echo "export PATH=$HOME/.local/share/gem/ruby/3.0.0/bin:$PATH" >> $GITHUB_ENV
        gem install bundler --user-install # Instalar bundler en el directorio del usuario

    - name: Run tests and check scripts
      run: |
        mkdir -p logs
        error_found=false

        # Función para ejecutar scripts y registrar errores
        run_script() {
          local script=$1
          local lang=$2
          echo "Running $script"
          case $lang in
            "python")
              python $script &> logs/$(basename $script).log || error_found=true
              ;;
            "ruby")
              ruby $script &> logs/$(basename $script).log || error_found=true
              ;;
            "c")
              gcc $script -o build/$(basename $script .c) &> logs/$(basename $script).compile.log || error_found=true
              ./build/$(basename $script .c) &> logs/$(basename $script .c).run.log || error_found=true
              ;;
            "cpp")
              g++ $script -o build/$(basename $script .cpp) &> logs/$(basename $script .cpp).compile.log || error_found=true
              ./build/$(basename $script .cpp) &> logs/$(basename $script .cpp).run.log || error_found=true
              ;;
            "csharp")
              dotnet build $script &> logs/$(basename $script).compile.log || error_found=true
              dotnet run --project $script &> logs/$(basename $script).run.log || error_found=true
              ;;
            "lua")
              lua $script &> logs/$(basename $script).log || error_found=true
              ;;
          esac
          if [ "$error_found" = true ]; then
            echo "$script failed. Check logs/$(basename $script).log for details."
          fi
        }

        # Ejecutar scripts de Python
        for file in $(find . -name "*.py"); do
          run_script $file "python"
        done

        # Ejecutar scripts de Ruby
        for file in $(find . -name "*.rb"); do
          run_script $file "ruby"
        done

        # Ejecutar scripts de C
        for file in $(find . -name "*.c"); do
          run_script $file "c"
        done

        # Ejecutar scripts de C++
        for file in $(find . -name "*.cpp"); do
          run_script $file "cpp"
        done

        # Ejecutar scripts de C#
        for file in $(find . -name "*.cs"); do
          run_script $file "csharp"
        done

        # Ejecutar scripts de Lua
        for file in $(find . -name "*.lua"); do
          run_script $file "lua"
        done

        # Salir con código de error si se encontró algún error
        if [ "$error_found" = true ]; then
          exit 1
        fi

    - name: Archive logs
      run: tar -czf logs.tar.gz logs

    - name: Send email on failure
      if: ${{ failure() }} # Este paso solo se ejecutará si alguno de los pasos anteriores falló
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.GMAIL_USERNAME }}
        password: ${{ secrets.GMAIL_PASSWORD }}
        from: ${{ secrets.GMAIL_USERNAME }}
        to: davikenat@gmail.com
        subject: Error en el repositorio - Logs adjuntos
        body: |
          Error encontrado en el repositorio.
          Detalles del error:
          - Repositorio: ${{ github.repository }}
          - Rama: ${{ github.ref }}
          - Workflow: ${{ github.workflow }}
          - Run ID: ${{ github.run_id }}
          - Se adjuntan los logs para más detalles.
        attachments: logs.tar.gz
