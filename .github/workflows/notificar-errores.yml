name: CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Environment
      run: |
        # Instalar dependencias necesarias
        sudo apt-get update
        sudo apt-get install -y ruby-full gcc g++ dotnet-sdk-8.0 lua5.4

    - name: Run tests
      run: |
        mkdir -p logs
        error_found=false

        # Función para ejecutar un script y registrar el resultado
        run_script() {
          local script=$1
          local log_file="logs/$(basename "$script").log"
          echo "Running $script"
          if ! "$script" &> "$log_file"; then
            echo "$script failed. Check $log_file for details."
            error_found=true
          fi
        }

        # Ejecutar scripts de Python
        for file in $(find . -name "*.py"); do
          run_script "python3 $file"
        done

        # Ejecutar scripts de Ruby
        for file in $(find . -name "*.rb"); do
          run_script "ruby $file"
        done

        # Ejecutar scripts de C
        for file in $(find . -name "*.c"); do
          echo "Compiling $file"
          if gcc "$file" -o "build/$(basename "$file" .c)"; then
            run_script "./build/$(basename "$file" .c)"
          else
            echo "$file compile failed. Check logs for details."
            error_found=true
          fi
        done

        # Ejecutar scripts de C++
        for file in $(find . -name "*.cpp"); do
          echo "Compiling $file"
          if g++ "$file" -o "build/$(basename "$file" .cpp)"; then
            run_script "./build/$(basename "$file" .cpp)"
          else
            echo "$file compile failed. Check logs for details."
            error_found=true
          fi
        done

        # Ejecutar scripts de C#
        for file in $(find . -name "*.cs"); do
          echo "Building $file"
          if dotnet build "$file"; then
            run_script "dotnet run --project $file"
          else
            echo "$file compile failed. Check logs for details."
            error_found=true
          fi
        done

        # Ejecutar scripts de Lua
        for file in $(find . -name "*.lua"); do
          run_script "lua $file"
        done

        # Salir con código de error si se encontró algún error
        if [ "$error_found" = true ]; then
          echo "Errors were found during execution. Check logs for details."
          exit 1
        fi

    - name: Send email on failure
      if: ${{ failure() }} # Este paso solo se ejecutará si alguno de los pasos anteriores falló
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.GMAIL_USERNAME }}
        password: ${{ secrets.GMAIL_PASSWORD }}
        from: ${{ secrets.GMAIL_USERNAME }}
        to: davikenat@gmail.com
        subject: Error en el repositorio - Logs adjuntos
        body: |
          Se encontraron errores durante la ejecución de los tests.
          Revisa los logs para más detalles.
        attachments: logs/*.log
